---
AWSTemplateFormatVersion: 2010-09-09

Description: Reference Architecture to host WordPress on AWS - Creates WordPress web Auto Scaling group

Metadata:

  Authors:
    Description: Darryl Osborne (darrylo@amazon.com)
  License:
    Description: 'Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved.
                  SPDX-License-Identifier: MIT-0'

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Web Parameters
      Parameters:
        - PHPVersion
        - PHPIniOverride
        - EC2KeyName
        - WebInstanceType
        - WebAsgMax
        - WebAsgMin
        - WebSecurityGroup
        - NumberOfSubnets
        - Subnet
        - PublicAlbTargetGroupArn
        - PublicAlbHostname
        - SslCertificate
    - Label:
        default: WordPress Parameters
      Parameters:
        - WPVersion
        - WPTitle
        - WPDomainName
        - WPDirectory
        - WPAdminUsername
        - WPAdminPassword
        - WPAdminEmail
        - WPLocale
    - Label:
        default: Database Parameters
      Parameters:
        - DatabaseClusterEndpointAddress
        - DatabaseName
        - DatabaseMasterUsername
        - DatabaseMasterPassword
    - Label:
        default: File System Parameters
      Parameters:
        - ElasticFileSystem
    ParameterLabels:
      PHPIniOverride:
        default: AWS php.ini Overrides
      DatabaseClusterEndpointAddress:
        default: DB Cluster Endpoint Address
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseName:
        default: DB Name
      ElasticFileSystem:
        default: EFS File System
      EC2KeyName:
        default: Existing Key Pair
      NumberOfSubnets:
        default: Number of subnets
      PHPVersion:
        default: PHP Version
      PublicAlbTargetGroupArn:
        default: Public Alb Target Group Arn
      PublicAlbHostname:
        default: Public Alb Hostname
      SslCertificate:
        default: ACM Cert attached to Public Alb
      Subnet:
        default: Subnets
      WebAsgMax:
        default: Web ASG Max
      WebAsgMin:
        default: Web ASG Min
      WebInstanceType:
        default: Web Instance Type
      WebSecurityGroup:
        default: Web Security Group
      WPAdminEmail:
        default: Admin Email
      WPAdminPassword:
        default: Admin Password
      WPAdminUsername:
        default: Admin Username
      WPDirectory:
        default: Site Directory
      WPDomainName:
        default: Site Domain
      WPLocale:
        default: Language Code
      WPTitle:
        default: Site Title
      WPVersion:
        default: WordPress Version

Parameters:

  DatabaseClusterEndpointAddress:
    Description: The RDS cluster endpoint address.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master username.
    ConstraintDescription: Must contain only alphanumeric characters and be at least 8 characters.
    MaxLength: 16
    MinLength: 1
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: The Amazon RDS master password.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master database name.
    Type: String
  ElasticFileSystem:
    AllowedPattern: ^(fs-)([a-z0-9]{8,17})$
    Description: The Amazon EFS file system id.
    Type: String
  EC2KeyName:
    AllowedPattern: ^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfSubnets:
    AllowedValues:
    - 2
    - 3
    - 4
    - 5
    - 6
    Default: 3
    Description: Number of subnets. This must match your selections in the list of subnets below.
    Type: String
  PHPIniOverride:
    Description: Full Amazon S3 https path to a php.ini override file (e.g. https://s3.amazonaws.com/aws-refarch-python3/wordpress/latest/bits/20-aws.ini)
    Type: String
  PHPVersion:
    AllowedValues:
    - 7.4
    Default: 7.4
    Description: The version of PHP to install.
    Type: String
  PipelineBucket:
    Description: Pipeline Bucket Name.
    Type: String
  PublicAlbTargetGroupArn:
    Description: The public application load balancer target group arn.
    Type: String
  PublicAlbHostname:
    Description: The hostname of the public ALB http form (e.g. http://abdc-12345-xyz.<region>.elb.amazonaws.com)
    Type: String
  SslCertificate:
    AllowedValues:
      - True
      - False
    Default: False
    Description: Is there an ACM SSL Certificate attached to the Public Alb?
    Type:
      String
  Subnet:
    Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
    Type: List<AWS::EC2::Subnet::Id>
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 4
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 2
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebInstanceType:
    AllowedValues:
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m4.16xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - x1.16xlarge
    - x1.32xlarge
    - x1e.xlarge
    - x1e.2xlarge
    - x1e.4xlarge
    - x1e.8xlarge
    - x1e.16xlarge
    - x1e.32xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - h1.2xlarge
    - h1.4xlarge
    - h1.8xlarge
    - h1.16xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - f1.2xlarge
    - f1.16xlarge
    - g2.2xlarge
    - g2.8xlarge
    - g3.4xlarge
    - g3.8xlarge
    - g3.16xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t3.large
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  WebSecurityGroup:
    Description: Select the web security group.
    Type: AWS::EC2::SecurityGroup::Id
  WPAdminEmail:
    AllowedPattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
    Description: The WordPress admin email address.
    Type: String
  WPAdminPassword:
    AllowedPattern: ^([a-zA-Z0-9`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: The WordPress admin password.
    Type: String
    NoEcho: true
  WPAdminUsername:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The WordPress admin username.
    Type: String
  WPDirectory:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The WordPress site directory.
    Type: String
  WPDomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: '[ Optional ] The main domain name of the WordPress site (e.g. example.com). Leave empty to use the ALB DNS name for the WordPress site.'
    Type: String
  WPLocale:
    Description: The main language of the WordPress site, as per https://codex.WordPress.org/Installing_WordPress_in_Your_Language. The default is 'en_GB'.
    Type: String
    Default: en_GB
  WPTitle:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9 _-]*)([a-zA-Z0-9])$
    Description: The WordPress website title.
    Type: String
  WPVersion:
    AllowedValues:
      - latest
      - nightly
      - 4.5
      - 4.6
      - 4.7
      - 4.8
      - 4.9
    Default: latest
    Description: The WordPress version (make sure this version is compatible with the PHP version selected above).
    Type: String

Conditions:

  NoSslCertificate:
    !Equals [ False, !Ref SslCertificate ]
  NumberOfSubnets1:
    !Equals [ 1, !Ref NumberOfSubnets ]
  NumberOfSubnets2:
    !Equals [ 2, !Ref NumberOfSubnets ]
  NumberOfSubnets3:
    !Equals [ 3, !Ref NumberOfSubnets ]
  NumberOfSubnets4:
    !Equals [ 4, !Ref NumberOfSubnets ]
  NumberOfSubnets5:
    !Equals [ 5, !Ref NumberOfSubnets ]
  NumberOfSubnets6:
    !Equals [ 6, !Ref NumberOfSubnets ]
  PHP55:
    !Equals [ 5.5, !Ref PHPVersion ]
  PHP56:
    !Equals [ 5.6, !Ref PHPVersion ]
  PHP74:
    !Equals [ 7.4, !Ref PHPVersion ]
  Subnet0: !Or
    - !Condition NumberOfSubnets1
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet1: !Or
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet2: !Or
    - !Condition NumberOfSubnets3
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet3: !Or
    - !Condition NumberOfSubnets4
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet4: !Or
    - !Condition NumberOfSubnets5
    - !Condition NumberOfSubnets6
  Subnet5: !Condition NumberOfSubnets6
  NoWPDomainName:
    !Equals [ '', !Ref WPDomainName ]

Mappings:

  RegionMap:
    ap-northeast-1:
      AMI: ami-0b276ad63ba2d6009
    ap-northeast-2:
      AMI: ami-0b827f3319f7447c6
    ap-northeast-3:
      AMI: ami-07420201371095f81
    ap-south-1:
      AMI: ami-00bf4ae5a7909786c
    ap-southeast-1:
      AMI: ami-0e5182fad1edfaa68
    ap-southeast-2:
      AMI: ami-0c9fe0dec6325a30c
    ca-central-1:
      AMI: ami-0db72f413fc1ddb2a
    eu-central-1:
      AMI: ami-00f22f6155d6d92c5
    eu-north-1:
      AMI: ami-00517306b63c4628c
    eu-west-1:
      AMI: ami-058b1b7fe545997ae
    eu-west-2:
      AMI: ami-03ac5a9b225e99b02
    eu-west-3:
      AMI: ami-062fdd189639d3e93
    sa-east-1:
      AMI: ami-05e809fbeee38dd5e
    us-east-1:
      AMI: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538


Resources:

  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref WebInstanceRole
  WebInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource:
            - arn:aws:logs:*:*:*
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 60
      HealthCheckGracePeriod: 900
      HealthCheckType: ELB
      LaunchConfigurationName:
        !Ref WebLaunchConfiguration74
      MaxSize: !Ref WebAsgMax
      MinSize: !Ref WebAsgMin
      DesiredCapacity: !Ref WebAsgMin
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Web ASG / ', !Ref 'AWS::StackName' ] ]
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref PublicAlbTargetGroupArn
      VPCZoneIdentifier:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref Subnet ] ],
          !If
            [ NumberOfSubnets2,
            [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ] ],
            !If
              [ NumberOfSubnets3,
              [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ] ],
              !If
                [ NumberOfSubnets4,
                [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ] ],
                !If
                  [ NumberOfSubnets5,
                  [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ], !Select [ 4, !Ref Subnet ] ],
                  [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ], !Select [ 3, !Ref Subnet ], !Select [ 4, !Ref Subnet ], !Select [ 5, !Ref Subnet ] ]
                  ]
                ]
              ]
            ]
          ]
    CreationPolicy:
      ResourceSignal:
        Count: !Ref WebAsgMin
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        PauseTime: PT15M
        WaitOnResourceSignals: true
  WebLaunchConfiguration74:
    Condition: PHP74
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          deploy_webserver:
            - amazon_linux_extras_setup
            - nginx_download_files
            - install_webserver
            - nginx_config_file
            - nginx_service_file
            - configure_php_fpm
            - build_cacheclient
            - build_wordpress
            - build_opcache
            - download_aws_ini
            - install_aws_ini
            - install_cacheclient
            - install_wordpress
            - install_opcache
            - start_webserver
        amazon_linux_extras_setup:
          files:
            /tmp/create_amazon_linux_extras.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "sudo amazon-linux-extras install php7.4\n",
                    "sudo amazon-linux-extras enable php7.4\n",
                    "sudo yum clean metadata\n",
                    "sudo yum -y install php-cli php-pdo php-fpm php-json php-mysqlnd php-mbstring\n",
                    "sudo yum -y install awslogs\n",
                    "sudo yum -y install mysql\n",
                    "sudo yum -y install php-devel\n",
                    "sudo yum -y install php-pear\n",
                    "sudo yum -y install unzip \n",
                    "sudo yum -y install git httpd-devel pcre-devel libxml2-devel gcc zlib-devel gcc-c++ autoconf automake \n",
                  ]
                ]
              mode: 000500
              owner: root
              group: root
          commands:
            amazon_linux_extras_php74:
              command: ./create_amazon_linux_extras.sh
              cwd: /tmp
              ignoreErrors: false
        nginx_download_files:
          files:
            /tmp/nginx_download_files.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "wget -P /tmp/ https://nginx.org/download/nginx-1.20.2.tar.gz -O - | tar -xz -C /tmp/ \n",
                    "git clone --recursive https://github.com/google/ngx_brotli /tmp/ngx_brotli \n",
                    "sudo wget -c https://www.openssl.org/source/openssl-1.1.1o.tar.gz -O - | sudo tar -xz -C /usr/local/src \n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
          commands:
            nginx_download_files:
              command: ./nginx_download_files.sh
              cwd: /tmp
              ignoreErrors: false
        install_webserver:
          files:
            /tmp/nginx_install_w_modules.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "cd /tmp/nginx-1.20.2 \n",
                    "./configure --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --without-http_charset_module --without-http_ssi_module --without-http_userid_module --without-http_access_module --without-http_autoindex_module --without-http_geo_module --without-http_split_clients_module --without-http_referer_module --without-http_uwsgi_module --without-http_scgi_module --without-http_memcached_module --without-http_limit_conn_module --without-http_limit_req_module --without-http_empty_gif_module --without-http_browser_module --without-http_upstream_hash_module --without-http_upstream_ip_hash_module --without-http_upstream_least_conn_module --without-http_upstream_keepalive_module --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --with-http_ssl_module --with-openssl=/usr/local/src/openssl-1.1.1o --with-compat --add-dynamic-module=../ngx_brotli \n",
                    "make \n",
                    "make modules \n",
                    "make install \n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
          commands:
            nginx_install_w_modules:
              command: ./nginx_install_w_modules.sh
              cwd: /tmp
              ignoreErrors: false
        nginx_config_file:
          files:
            /etc/nginx/nginx.conf:
              content:
                !Sub |
                  user  nginx;
                  # Result of: grep processor /proc/cpuinfo | wc -l
                  worker_processes  2;

                  #error_log  logs/error.log;
                  #error_log  logs/error.log  notice;
                  #error_log  logs/error.log  info;

                  #pid        logs/nginx.pid;

                  # Load module section
                  load_module modules/ngx_http_brotli_filter_module.so;
                  load_module modules/ngx_http_brotli_static_module.so;

                  events {
                      multi_accept        on;
                      use                 epoll;
                      # should be worker_process * ulimit -n
                      worker_connections  2048;
                  }

                  http {
                      include       mime.types;
                      default_type  application/octet-stream;

                      #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      #                  '$status $body_bytes_sent "$http_referer" '
                      #                  '"$http_user_agent" "$http_x_forwarded_for"';

                      #access_log  logs/access.log  main;

                      sendfile        on;
                      tcp_nopush     on;
                      tcp_nodelay        on;

                      gzip  off;

                      # brotli
                      brotli on;
                      brotli_static on;
                      brotli_comp_level 6;
                      brotli_types text/xml image/svg+xml application/x-font-ttf image/vnd.microsoft.icon application/x-font-opentype application/json font/eot application/vnd.ms-fontobject application/javascript font/otf application/xml application/xhtml+xml text/javascript  application/x-javascript text/plain application/x-font-truetype application/xml+rss image/x-icon font/opentype text/css image/x-win-bitmap;

                      ## Start: Size Limits & Buffer Overflows ##
                      client_body_buffer_size  10K;
                      #client_header_buffer_size 1k; # uncomment and test
                      client_max_body_size 500m; # This is only high because of video uploads
                      #large_client_header_buffers 2 1k; # uncomment and test
                      ## END: Size Limits & Buffer Overflows ##

                      ## Start: Timeouts ##
                      client_body_timeout   60; # changed from 10
                      client_header_timeout 60; # changed from 10
                      # keepalive_timeout     5 5; # Removed for now
                      send_timeout          240;
                      ## End: Timeouts ##

                      server_tokens off;

                      map $upstream_http_strict_transport_security $sts {
                          '' 'max-age=63072000;includeSubDomains;preload;'; default '';
                      }

                      server {
                          listen       80 default_server;
                          server_name  localhost;
                          root         /var/www/wordpress/vidcruiter;
                          index        index.php;

                          # https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security
                          #add_header Strict-Transport-Security "max-age=63072000;includeSubDomains;preload;" always;
                          proxy_hide_header Strict-Transport-Security;
                          add_header Strict-Transport-Security $sts;

                          # X-Content-Type-Options Best Practices
                          add_header X-Content-Type-Options "nosniff" always;

                          # X-Frame-Options Best Practices
                          add_header X-Frame-Options "SAMEORIGIN";

                          # X-XSS-Protection Best Practices
                          add_header X-XSS-Protection "1; mode=block" always;

                          # Load configuration files for the default server block.
                          #include /etc/nginx/default.d/*.conf;

                          # redirect server error pages to the static page /40x.html
                          #
                          error_page 404 /404.html;
                              location = /40x.html {
                          }

                          # redirect server error pages to the static page /50x.html
                          #
                          error_page 500 502 503 504 /50x.html;
                              location = /50x.html {
                          }

                          location / {
                              try_files $uri $uri/ /index.php?$args;
                          }

                          location ~ \.php$ {
                            fastcgi_pass     unix:/run/php-fpm/www.sock;
                            fastcgi_index    index.php;
                            fastcgi_param    SCRIPT_FILENAME $document_root$fastcgi_script_name;
                            include          fastcgi_params;
                          }

                      }

                  }
              mode: 000500
              owner: root
              group: root
        nginx_service_file:
          files:
            /usr/lib/systemd/system/nginx.service:
              content:
                !Sub |
                  [Unit]
                  Description=The nginx HTTP and reverse proxy server
                  After=network-online.target remote-fs.target nss-lookup.target
                  Wants=network-online.target

                  [Service]
                  Type=forking
                  PIDFile=/run/nginx.pid
                  # Nginx will fail to start if /run/nginx.pid already exists but has the wrong
                  # SELinux context. This might happen when running `nginx -t` from the cmdline.
                  # https://bugzilla.redhat.com/show_bug.cgi?id=1268621
                  ExecStartPre=/usr/bin/rm -f /run/nginx.pid
                  ExecStartPre=/usr/sbin/nginx -t
                  ExecStart=/usr/sbin/nginx
                  ExecReload=/usr/sbin/nginx -s reload
                  KillSignal=SIGQUIT
                  TimeoutStopSec=5
                  KillMode=mixed
                  PrivateTmp=true

                  [Install]
                  WantedBy=multi-user.target
              mode: 000500
              owner: root
              group: root
        configure_php_fpm:
          commands:
            01_replace_apache_with_nginx_user:
              command: "sed -i 's/apache/nginx/g' /etc/php-fpm.d/www.conf"
              ignoreErrors: false
            02_comment_acl_groups:
              command: "sed -i 's/^listen.acl_users*/;listen.acl_users/g' /etc/php-fpm.d/www.conf"
              ignoreErrors: false
            03_adding_nginx_owner_group:
              command: "sed -i 's/nobody/nginx/g' /etc/php-fpm.d/www.conf"
              ignoreErrors: false
            04_remove_commented_permissions:
              command: "sed -i 's/^;listen.owner*/listen.owner/g' /etc/php-fpm.d/www.conf && sed -i 's/^;listen.group*/listen.group/g' /etc/php-fpm.d/www.conf"
              ignoreErrors: false
            05_set_ownership_logs_dir:
              command: "chown -R nginx:nginx /var/log/php-fpm"
              ignoreErrors: false
            06_set_ownership_session_dir:
              command: "chown -R root:nginx /var/lib/php/"
              ignoreErrors: false
        build_cacheclient:
          packages:
            yum:
              gcc-c++: []
          files:
            /tmp/install_cacheclient.sh:
              content:
                !Sub |
                  #!/bin/bash -xe
                  pecl install igbinary
                  wget -P /tmp/ https://s3.amazonaws.com/aws-refarch-python3/wordpress/latest/bits/AmazonElastiCacheClusterClient-PHP74-64bit-libmemcached-1.0.18.tar.gz
                  tar -xf '/tmp/AmazonElastiCacheClusterClient-PHP74-64bit-libmemcached-1.0.18.tar.gz'
                  cp '/tmp/amazon-elasticache-cluster-client.so' /usr/lib64/php/modules/
                  if [ ! -f /etc/php.d/50-memcached.ini ]; then
                      touch /etc/php.d/50-memcached.ini
                  fi
                  echo 'extension=igbinary.so;' >> /etc/php.d/50-memcached.ini
                  echo 'extension=/usr/lib64/php/modules/amazon-elasticache-cluster-client.so;' >> /etc/php.d/50-memcached.ini
              mode: 000500
              owner: root
              group: root
        build_opcache:
          packages:
            yum:
              php-opcache: []
          files:
            /tmp/install_opcache.sh:
              content:
                !Sub |
                  #!/bin/bash -xe
                  # create hidden opcache directory locally & change owner to apache
                  if [ ! -d /var/www/.opcache ]; then
                      mkdir -p /var/www/.opcache
                  fi
                  # enable opcache in /etc/php.d/10-opcache.ini
                  sed -i 's/;opcache.file_cache=.*/opcache.file_cache=\/var\/www\/.opcache/' /etc/php.d/10-opcache.ini
                  sed -i 's/opcache.memory_consumption=.*/opcache.memory_consumption=512/' /etc/php.d/10-opcache.ini
                  # download opcache-instance.php to verify opcache status
                  if [ ! -f /var/www/wordpress/${WPDirectory}/opcache-instanceid.php ]; then
                      wget -P /var/www/wordpress/${WPDirectory}/ https://s3.amazonaws.com/aws-refarch-python3/wordpress/latest/bits/opcache-instanceid.php
                  fi
              mode: 000500
              owner: root
              group: root
        build_wordpress:
          files:
            /tmp/install_wordpress.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "\n",
                    "# install wp-cli\n",
                    "if [ ! -f /bin/wp/wp-cli.phar ]; then\n",
                    "   curl -o /bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\n",
                    "   chmod +x /bin/wp\n",
                    "fi\n",
                    "\n",
                    "# make site directory\n",
                    "if [ ! -d /var/www/wordpress/", !Ref WPDirectory, " ]; then\n",
                    "   mkdir -p /var/www/wordpress/", !Ref WPDirectory, "\n",
                    "\n",
                    "   cd /var/www/wordpress/", !Ref WPDirectory, "\n",
                    "   # install wordpress if not installed\n",
                    "   # use public alb host name if wp domain name was empty\n",
                    "   if ! $(wp core is-installed --allow-root); then\n",
                    "       wp core download --version='", !Ref WPVersion, "' --locale='", !Ref WPLocale, "' --allow-root\n",
                    "       wp core config --dbname='", !Ref DatabaseName, "' --dbuser='", !Ref DatabaseMasterUsername, "' --dbpass='", !Ref DatabaseMasterPassword, "' --dbhost='", !Ref DatabaseClusterEndpointAddress, "' --dbprefix=wp_ --allow-root\n",
                    "       wp core install --url=", !If [ NoWPDomainName, !Ref PublicAlbHostname, !Join [ "", [ "'http://www.", !Ref WPDomainName, "'" ] ] ], " --title='", !Ref WPTitle, "' --admin_user='", !Ref WPAdminUsername, "' --admin_password='", !Ref WPAdminPassword, "' --admin_email='", !Ref WPAdminEmail, "' --skip-email --allow-root\n",
                    "       wp plugin install w3-total-cache --allow-root\n",
                    "       sed -i \"/$table_prefix = 'wp_';/ a \\define('WP_HOME', 'http://' . \\$_SERVER['HTTP_HOST']); \" /var/www/wordpress/", !Ref WPDirectory, "/wp-config.php\n",
                    "       sed -i \"/$table_prefix = 'wp_';/ a \\define('WP_SITEURL', 'http://' . \\$_SERVER['HTTP_HOST']); \" /var/www/wordpress/", !Ref WPDirectory, "/wp-config.php\n",
                    "       # enable HTTPS in wp-config.php if ACM Public SSL Certificate parameter was not empty\n",
                            !If [ NoSslCertificate, !Join [ '', [ "       sed -i \"/$table_prefix = 'wp_';/ a \\# No ACM Public SSL Certificate \" /var/www/wordpress/", !Ref WPDirectory, "/wp-config.php\n" ] ] , !Join [ '', [ "       sed -i \"/$table_prefix = 'wp_';/ a \\$_SERVER['HTTPS'] = 'on';\" /var/www/wordpress/", !Ref WPDirectory, "/wp-config.php\n" ] ] ],
                    "\n",
                    "       # set permissions of wordpress site directories\n",
                    "       chown -R nginx:nginx /var/www/wordpress/", !Ref WPDirectory, "\n",
                    "       chmod u+wrx /var/www/wordpress/", !Ref WPDirectory, "/wp-content/*\n",
                    "       if [ ! -f /var/www/wordpress/", !Ref WPDirectory, "/opcache-instanceid.php ]; then\n",
                    "         wget -P /var/www/wordpress/", !Ref WPDirectory, "/ https://s3.amazonaws.com/aws-refarch-python3/wordpress/latest/bits/opcache-instanceid.php\n",
                    "       fi\n",
                    "   fi\n",
                    "   RESULT=$?\n",
                    "   if [ $RESULT -eq 0 ]; then\n",
                    "       touch /var/www/wordpress/", !Ref WPDirectory, "/wordpress.initialized\n",
                    "         else\n",
                    "       touch /var/www/wordpress/", !Ref WPDirectory, "/wordpress.failed\n",
                    "   fi\n",
                    "fi\n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
        download_aws_ini:
          files:
            /tmp/download_aws_ini.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -x\n",
                    "\n",
                    "wget -P /etc/php.d/ ", !Ref PHPIniOverride, "\n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
        install_aws_ini:
          commands:
            install_aws_ini:
              command: ./download_aws_ini.sh
              cwd: /tmp
              ignoreErrors: true
        install_wordpress:
          commands:
            install_wordpress:
              command: ./install_wordpress.sh
              cwd: /tmp
              ignoreErrors: false
        install_cacheclient:
          commands:
            install_cacheclient:
              command: ./install_cacheclient.sh
              cwd: /tmp
              ignoreErrors: false
        install_opcache:
          commands:
            install_opcache:
              command: ./install_opcache.sh
              cwd: /tmp
              ignoreErrors: false
        start_webserver:
          commands:
            01_restart_php_fpm:
              command: "sudo systemctl restart php-fpm.service"
              ignoreErrors: false
            02_restart_nginx:
              command: "sudo systemctl restart nginx.service"
              ignoreErrors: false
          services:
            systemd:
              nginx:
                enabled: true
                ensureRunning: true
    Properties:
      IamInstanceProfile: !Ref WebInstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceMonitoring: true
      InstanceType: !Ref WebInstanceType
      KeyName: !Ref EC2KeyName
      SecurityGroups:
      - !Ref WebSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum update -y
            mkdir -p /var/www/wordpress
            mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${ElasticFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /var/www/wordpress
            /opt/aws/bin/cfn-init --configsets deploy_webserver --verbose --stack ${AWS::StackName} --resource WebLaunchConfiguration74 --region ${AWS::Region}
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource WebAutoScalingGroup --region ${AWS::Region}

Outputs:

  Opcachestatus:
    Value: !Join [ '', [ !Ref PublicAlbHostname, '/opcache-instanceid.php' ] ]
  WebASG:
    Value: !Ref WebAutoScalingGroup